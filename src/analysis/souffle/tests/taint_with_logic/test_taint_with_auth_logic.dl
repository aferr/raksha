//-----------------------------------------------------------------------------
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-----------------------------------------------------------------------------

#include "../../taint.dl"
#include "../../flat_graph_ir.dl"
#include "../../edges_from_graph.dl"
#include "../../fact_test_helper.dl"

// This is a datalog file that is meant to test taint_with_auth_logic.dl. It 
// should eventually be replaced by or otherwise used as a part of an
// automated test.

//-----------------------------------------------------------------------------
// Program Manifests
//-----------------------------------------------------------------------------

// Module 1: ImageDetector
//      reads: 
//          sensor_data_packet { camera_feed, video_resolution }
//          image_detection_model
//      writes:
//          image_detection_boxes
bindFlatParticle("ImageDetector", $FlatParticle(
    /* reads */
    $Cons("sensor_data_packet.camera_feed",
        $Cons("sensor_data_packet.video_resolution",
        $Cons("image_detection_model", $Nil()))),
    /* writes */
    $Cons("image_detection_boxes", $Nil())
)).

// the label of "other_input" is the empty set (which makes it public).
// so it has no label elements

// Module 2: ImageSelector
//     reads:
//         image_detection_boxes
//         image_selection   // image selection action from user
//     writes:
//         selected_image_id
bindFlatParticle("ImageSelector", $FlatParticle(
    /* reads */
    $Cons("image_detection_boxes", $Cons("image_selection", $Nil())),
    /* writes */
    $Cons("selected_image_id", $Nil())
)).

//-----------------------------------------------------------------------------
// Policy
//-----------------------------------------------------------------------------

// Assign owners to tags
ownsTag("Alice", "raw_video_tag").
ownsTag("Alice", "detected_images_tag").
ownsTag("Alice", "image_selection_tag").
ownsTag("Alice", "product_id_tag").
ownsTag("ServiceProvider", "image_detection_model_tag").

// Assign tags to initial inputs
claimHasTag("sensor_data_packet.camera_feed", "raw_video_tag").
// the access path, sensor_data_packet.video_resolution does not have sensitive 
// data in this example -- it's just a configuration option that is 
// uninteresting w.r.t privacy, so it has no tags (it's fully public / the empty set).
claimHasTag("image_selection", "image_selection_tag").
claimHasTag("detection_model", "image_detection_model_tag").

// The label of the access path "image_detection_boxes" is downgraded from
// {raw_video_tag, image_detection_model_tag} to {detected_images_tag}. This happens in two 
// steps -- first the label is downgraded from {raw_video_tag, 
// image_detection_tag} to {} (the empty set, which is totally public -- can go 
// anywhere).

// Target label for the downgrade specified by both
// Alice and ServiceProvider is {detected_images_tag}
isIFCLabel("image_detection_boxes_label").
isMember("detected_images_tag", "image_detection_boxes_label").

// Both Alice and ServiceProvider agree to this (which is needed to
// downgrade the tags that they each own -- "raw_video_tag" from Alice
// and "image_detection_model_tag" from ServiceProvider)
saysDowngradesLabel("Alice", "image_detection_boxes",
    "image_detection_boxes_label").
saysDowngradesLabel("ServiceProvider", "image_detection_boxes", 
    "image_detection_boxes_label").

// The output of the image selector is downgraded from 
// {detected_images_tag, image_selection_tag} to {product_id_tag}
// The needed agreement is given from both Alice and ServiceProvider
isIFCLabel("selected_image_label").
isMember("product_id_tag", "selected_image_label").
saysDowngradesLabel("Alice", "selected_image_id", "selected_image_label").
saysDowngradesLabel("ServiceProvider", "selected_image_id", 
    "selected_image_label").


//----------------------------------------------------------------------------- 
// Policy Check
//-----------------------------------------------------------------------------

// Define a label for doing the check of the final output
isIFCLabel("selected_image_id_expected_label").
isMember("product_id_tag", "selected_image_id_expected_label").

// The check passes if this is true (i.e., the CSV for test_label_check
// includes '1').
// It is supposed to pass. If you comment out any of the "saysDowngrades" lines
// above, it should fail.
TEST_CASE("egress_should_label_check") :-
    accessPathLabelFlowsTo("selected_image_id",
            "selected_image_id_expected_label").
