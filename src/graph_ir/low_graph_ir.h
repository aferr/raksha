//-----------------------------------------------------------------------------
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-----------------------------------------------------------------------------

/*
 * This is a small low-level IR that contains particles with flattened 
 * input/output access path lists. It can be translated directly into datalog
 * relations that similarly represent particles with flattened lists of full 
 * access path names.
 *
 * There is likely a higher-level IR from which this compiles, and the higher 
 * level IR can be generated by deserializing protobufs.
 */


#include <string>
#include <vector>
#include <set>

#ifndef LOW_GRAPH_IR_
#define LOW_GRAPH_IR_

using namespace std;

class LowGraphAccessPath {
    public:
        string full_path_name;
        LowGraphAccessPath(string _full_path_name) : 
            full_path_name(_full_path_name) {};
        string PrettyPrint();
};

class LowGraphNode {
    public:
       string name; 
       vector<LowGraphAccessPath> inputs;
       vector<LowGraphAccessPath> outputs;
       LowGraphNode(string _name, vector<LowGraphAccessPath> _inputs,
               vector<LowGraphAccessPath> _outputs) :
           name(_name), inputs(_inputs), outputs(_outputs) {};
       string PrettyPrint();
    public:
        static string PrettyPrintAPVec(vector<LowGraphAccessPath>);
};

typedef vector<LowGraphNode> LowGraph;
#endif // LOW_GRAPH_IR_

